c
params['registration'][:user].permit!
params['registration'][:user]
params['registration']
params
params.require(:registration).permit(:user['email'])
params.require(:registration).permit(user['email'])
params
params.require(:registration).permit(:user['email'])
params.require(:registration).permit(:user_email)
params.require(:registration).permit!(:email)
params.require(:registration).permit(:email)
params.permit(:email)
params.permit
params
p[arams
c
User.find_by(email: params[:email]).valid_password?(params[:password])
User.find_by(email: params[:email]).valid_password?(params[]:password)
User.find_by(email: params[:email]).valid_password?("")
User.find_by(email: params[:email]).authenticate("")
User.find_by(email: params[:email]).authenticate!("")
User.find_by(email: params[:email]).authenticate!()
User.find_by(email: params[:email])
warden
auth_options
 self.resource = warden.authenticate!(auth_options)
c
self.resource
User.find_by(email: "admin1234@gmail.com")
params
@user
resource
current_user
c
resource
resource_name
c
params
c
params
c
n
c
exception
n
c
exception
expection
n
c
@property.save!
@property
@porperty
n
c
n
c
@property
n
property_params
c
@property
@property.save
@property.save!
@property
admin?
c
exception
n
c
current_user.admin?
current_user
c
exception
n
c
response.errors
response
c
exception
n
property = Property.create!(valid_attributes)
c
n
c
exception
n
c
exception
n
c
favorite_property.save!
favorite_property.save
favorite_property
n
favorite
n
c
current_user.favorite.favorite_properties.any?
current_user.favorite.favorite_properties
current_user.favorite
current_user
@properties
c
properties = Property.residential_properties.within_rent_range(min_rent, max_rent).within_net_size_range(min_net_size, max_net_size)
        .with_max_bedrooms(max_bedrooms.to_i)
        .in_districts(districts)
        .in_cities(cities)
        .within_net_size_range(min_net_size, max_net_size)
        .within_rent_range(min_rent, max_rent)
properties = Property.residential_properties
config_data = load_config.with_indifferent_access
Property.residential_properties
cities
districts
max_bedrooms
c
*args
ret
n
method
super
n
resource
c
n
resource
n
c
property.property_type = 'house'
property.property_type
property
n
c
n
expect(property.valid?).to be(true)
n
c
exception
n
c
exception
n
property.valid?
property
c
user
user.id
params
c
params
@favorite_properties
n
c
user
c
User.all
params
user
c
@property.save!
@property.create!
@property
c
@property.create!
@property.save!
@property
c
params
c
response.status
n
c
response.status
response.statsu
response
n
c
params
property_params
n
@property
n
c
JSON.parse(response.body)
valid_attributes.stringify_keys
c
JSON.parse(response.body)
response.body
response
c
n
